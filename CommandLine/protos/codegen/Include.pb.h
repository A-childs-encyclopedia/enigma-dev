// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Include.proto

#ifndef PROTOBUF_INCLUDED_Include_2eproto
#define PROTOBUF_INCLUDED_Include_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Include_2eproto 

namespace protobuf_Include_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Include_2eproto
namespace buffers {
namespace resources {
class Include;
class IncludeDefaultTypeInternal;
extern IncludeDefaultTypeInternal _Include_default_instance_;
}  // namespace resources
}  // namespace buffers
namespace google {
namespace protobuf {
template<> ::buffers::resources::Include* Arena::CreateMaybeMessage<::buffers::resources::Include>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace buffers {
namespace resources {

enum Include_ExportAction {
  Include_ExportAction_DONT_EXPORT = 0,
  Include_ExportAction_EXPORT_TO_TEMPORARY_DIRECTORY = 1,
  Include_ExportAction_EXPORT_TO_WORKING_DIRECTORY = 2,
  Include_ExportAction_EXPORT_TO_CUSTOM_DIRECTORY = 3
};
bool Include_ExportAction_IsValid(int value);
const Include_ExportAction Include_ExportAction_ExportAction_MIN = Include_ExportAction_DONT_EXPORT;
const Include_ExportAction Include_ExportAction_ExportAction_MAX = Include_ExportAction_EXPORT_TO_CUSTOM_DIRECTORY;
const int Include_ExportAction_ExportAction_ARRAYSIZE = Include_ExportAction_ExportAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* Include_ExportAction_descriptor();
inline const ::std::string& Include_ExportAction_Name(Include_ExportAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    Include_ExportAction_descriptor(), value);
}
inline bool Include_ExportAction_Parse(
    const ::std::string& name, Include_ExportAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Include_ExportAction>(
    Include_ExportAction_descriptor(), name, value);
}
// ===================================================================

class Include : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:buffers.resources.Include) */ {
 public:
  Include();
  virtual ~Include();

  Include(const Include& from);

  inline Include& operator=(const Include& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Include(Include&& from) noexcept
    : Include() {
    *this = ::std::move(from);
  }

  inline Include& operator=(Include&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Include& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Include* internal_default_instance() {
    return reinterpret_cast<const Include*>(
               &_Include_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Include* other);
  friend void swap(Include& a, Include& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Include* New() const final {
    return CreateMaybeMessage<Include>(NULL);
  }

  Include* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Include>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Include& from);
  void MergeFrom(const Include& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Include* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Include_ExportAction ExportAction;
  static const ExportAction DONT_EXPORT =
    Include_ExportAction_DONT_EXPORT;
  static const ExportAction EXPORT_TO_TEMPORARY_DIRECTORY =
    Include_ExportAction_EXPORT_TO_TEMPORARY_DIRECTORY;
  static const ExportAction EXPORT_TO_WORKING_DIRECTORY =
    Include_ExportAction_EXPORT_TO_WORKING_DIRECTORY;
  static const ExportAction EXPORT_TO_CUSTOM_DIRECTORY =
    Include_ExportAction_EXPORT_TO_CUSTOM_DIRECTORY;
  static inline bool ExportAction_IsValid(int value) {
    return Include_ExportAction_IsValid(value);
  }
  static const ExportAction ExportAction_MIN =
    Include_ExportAction_ExportAction_MIN;
  static const ExportAction ExportAction_MAX =
    Include_ExportAction_ExportAction_MAX;
  static const int ExportAction_ARRAYSIZE =
    Include_ExportAction_ExportAction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ExportAction_descriptor() {
    return Include_ExportAction_descriptor();
  }
  static inline const ::std::string& ExportAction_Name(ExportAction value) {
    return Include_ExportAction_Name(value);
  }
  static inline bool ExportAction_Parse(const ::std::string& name,
      ExportAction* value) {
    return Include_ExportAction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string export_directory = 7 [(.buffers.gmx) = "exportDir"];
  bool has_export_directory() const;
  void clear_export_directory();
  static const int kExportDirectoryFieldNumber = 7;
  const ::std::string& export_directory() const;
  void set_export_directory(const ::std::string& value);
  #if LANG_CXX11
  void set_export_directory(::std::string&& value);
  #endif
  void set_export_directory(const char* value);
  void set_export_directory(const char* value, size_t size);
  ::std::string* mutable_export_directory();
  ::std::string* release_export_directory();
  void set_allocated_export_directory(::std::string* export_directory);

  // optional string file_name = 12 [(.buffers.file_path) = true, (.buffers.gmx) = "filename"];
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 12;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 size = 5;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 5;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional .buffers.resources.Include.ExportAction export_action = 6 [(.buffers.gmx) = "exportAction"];
  bool has_export_action() const;
  void clear_export_action();
  static const int kExportActionFieldNumber = 6;
  ::buffers::resources::Include_ExportAction export_action() const;
  void set_export_action(::buffers::resources::Include_ExportAction value);

  // optional bool exists = 4;
  bool has_exists() const;
  void clear_exists();
  static const int kExistsFieldNumber = 4;
  bool exists() const;
  void set_exists(bool value);

  // optional bool overwrite_existing = 8 [(.buffers.gmx) = "overwrite"];
  bool has_overwrite_existing() const;
  void clear_overwrite_existing();
  static const int kOverwriteExistingFieldNumber = 8;
  bool overwrite_existing() const;
  void set_overwrite_existing(bool value);

  // optional bool free_after_export = 9 [(.buffers.gmx) = "freeData"];
  bool has_free_after_export() const;
  void clear_free_after_export();
  static const int kFreeAfterExportFieldNumber = 9;
  bool free_after_export() const;
  void set_free_after_export(bool value);

  // optional bool remove_at_game_end = 10 [(.buffers.gmx) = "removeEnd"];
  bool has_remove_at_game_end() const;
  void clear_remove_at_game_end();
  static const int kRemoveAtGameEndFieldNumber = 10;
  bool remove_at_game_end() const;
  void set_remove_at_game_end(bool value);

  // optional bool store = 11;
  bool has_store() const;
  void clear_store();
  static const int kStoreFieldNumber = 11;
  bool store() const;
  void set_store(bool value);

  // @@protoc_insertion_point(class_scope:buffers.resources.Include)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_exists();
  void clear_has_exists();
  void set_has_size();
  void clear_has_size();
  void set_has_export_action();
  void clear_has_export_action();
  void set_has_export_directory();
  void clear_has_export_directory();
  void set_has_overwrite_existing();
  void clear_has_overwrite_existing();
  void set_has_free_after_export();
  void clear_has_free_after_export();
  void set_has_remove_at_game_end();
  void clear_has_remove_at_game_end();
  void set_has_store();
  void clear_has_store();
  void set_has_file_name();
  void clear_has_file_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr export_directory_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 size_;
  int export_action_;
  bool exists_;
  bool overwrite_existing_;
  bool free_after_export_;
  bool remove_at_game_end_;
  bool store_;
  friend struct ::protobuf_Include_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Include

// optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
inline bool Include::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Include::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Include::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Include::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Include::id() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.id)
  return id_;
}
inline void Include::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.id)
}

// optional bool exists = 4;
inline bool Include::has_exists() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Include::set_has_exists() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Include::clear_has_exists() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Include::clear_exists() {
  exists_ = false;
  clear_has_exists();
}
inline bool Include::exists() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.exists)
  return exists_;
}
inline void Include::set_exists(bool value) {
  set_has_exists();
  exists_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.exists)
}

// optional int32 size = 5;
inline bool Include::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Include::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Include::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Include::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 Include::size() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.size)
  return size_;
}
inline void Include::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.size)
}

// optional .buffers.resources.Include.ExportAction export_action = 6 [(.buffers.gmx) = "exportAction"];
inline bool Include::has_export_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Include::set_has_export_action() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Include::clear_has_export_action() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Include::clear_export_action() {
  export_action_ = 0;
  clear_has_export_action();
}
inline ::buffers::resources::Include_ExportAction Include::export_action() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.export_action)
  return static_cast< ::buffers::resources::Include_ExportAction >(export_action_);
}
inline void Include::set_export_action(::buffers::resources::Include_ExportAction value) {
  assert(::buffers::resources::Include_ExportAction_IsValid(value));
  set_has_export_action();
  export_action_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.export_action)
}

// optional string export_directory = 7 [(.buffers.gmx) = "exportDir"];
inline bool Include::has_export_directory() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Include::set_has_export_directory() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Include::clear_has_export_directory() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Include::clear_export_directory() {
  export_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_export_directory();
}
inline const ::std::string& Include::export_directory() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.export_directory)
  return export_directory_.GetNoArena();
}
inline void Include::set_export_directory(const ::std::string& value) {
  set_has_export_directory();
  export_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Include.export_directory)
}
#if LANG_CXX11
inline void Include::set_export_directory(::std::string&& value) {
  set_has_export_directory();
  export_directory_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Include.export_directory)
}
#endif
inline void Include::set_export_directory(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_export_directory();
  export_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Include.export_directory)
}
inline void Include::set_export_directory(const char* value, size_t size) {
  set_has_export_directory();
  export_directory_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Include.export_directory)
}
inline ::std::string* Include::mutable_export_directory() {
  set_has_export_directory();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Include.export_directory)
  return export_directory_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Include::release_export_directory() {
  // @@protoc_insertion_point(field_release:buffers.resources.Include.export_directory)
  if (!has_export_directory()) {
    return NULL;
  }
  clear_has_export_directory();
  return export_directory_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Include::set_allocated_export_directory(::std::string* export_directory) {
  if (export_directory != NULL) {
    set_has_export_directory();
  } else {
    clear_has_export_directory();
  }
  export_directory_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), export_directory);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Include.export_directory)
}

// optional bool overwrite_existing = 8 [(.buffers.gmx) = "overwrite"];
inline bool Include::has_overwrite_existing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Include::set_has_overwrite_existing() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Include::clear_has_overwrite_existing() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Include::clear_overwrite_existing() {
  overwrite_existing_ = false;
  clear_has_overwrite_existing();
}
inline bool Include::overwrite_existing() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.overwrite_existing)
  return overwrite_existing_;
}
inline void Include::set_overwrite_existing(bool value) {
  set_has_overwrite_existing();
  overwrite_existing_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.overwrite_existing)
}

// optional bool free_after_export = 9 [(.buffers.gmx) = "freeData"];
inline bool Include::has_free_after_export() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Include::set_has_free_after_export() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Include::clear_has_free_after_export() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Include::clear_free_after_export() {
  free_after_export_ = false;
  clear_has_free_after_export();
}
inline bool Include::free_after_export() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.free_after_export)
  return free_after_export_;
}
inline void Include::set_free_after_export(bool value) {
  set_has_free_after_export();
  free_after_export_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.free_after_export)
}

// optional bool remove_at_game_end = 10 [(.buffers.gmx) = "removeEnd"];
inline bool Include::has_remove_at_game_end() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Include::set_has_remove_at_game_end() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Include::clear_has_remove_at_game_end() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Include::clear_remove_at_game_end() {
  remove_at_game_end_ = false;
  clear_has_remove_at_game_end();
}
inline bool Include::remove_at_game_end() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.remove_at_game_end)
  return remove_at_game_end_;
}
inline void Include::set_remove_at_game_end(bool value) {
  set_has_remove_at_game_end();
  remove_at_game_end_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.remove_at_game_end)
}

// optional bool store = 11;
inline bool Include::has_store() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Include::set_has_store() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Include::clear_has_store() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Include::clear_store() {
  store_ = false;
  clear_has_store();
}
inline bool Include::store() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.store)
  return store_;
}
inline void Include::set_store(bool value) {
  set_has_store();
  store_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Include.store)
}

// optional string file_name = 12 [(.buffers.file_path) = true, (.buffers.gmx) = "filename"];
inline bool Include::has_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Include::set_has_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Include::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Include::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& Include::file_name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Include.file_name)
  return file_name_.GetNoArena();
}
inline void Include::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Include.file_name)
}
#if LANG_CXX11
inline void Include::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Include.file_name)
}
#endif
inline void Include::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Include.file_name)
}
inline void Include::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Include.file_name)
}
inline ::std::string* Include::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Include.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Include::release_file_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Include.file_name)
  if (!has_file_name()) {
    return NULL;
  }
  clear_has_file_name();
  return file_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Include::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Include.file_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace resources
}  // namespace buffers

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::buffers::resources::Include_ExportAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::buffers::resources::Include_ExportAction>() {
  return ::buffers::resources::Include_ExportAction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Include_2eproto
