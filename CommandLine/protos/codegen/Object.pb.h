// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Object.proto

#ifndef PROTOBUF_INCLUDED_Object_2eproto
#define PROTOBUF_INCLUDED_Object_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "options.pb.h"
#include "Event.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Object_2eproto 

namespace protobuf_Object_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Object_2eproto
namespace buffers {
namespace resources {
class Object;
class ObjectDefaultTypeInternal;
extern ObjectDefaultTypeInternal _Object_default_instance_;
class Object_ObjectPhysicsSettings;
class Object_ObjectPhysicsSettingsDefaultTypeInternal;
extern Object_ObjectPhysicsSettingsDefaultTypeInternal _Object_ObjectPhysicsSettings_default_instance_;
class Object_PhysicsShapePoint;
class Object_PhysicsShapePointDefaultTypeInternal;
extern Object_PhysicsShapePointDefaultTypeInternal _Object_PhysicsShapePoint_default_instance_;
}  // namespace resources
}  // namespace buffers
namespace google {
namespace protobuf {
template<> ::buffers::resources::Object* Arena::CreateMaybeMessage<::buffers::resources::Object>(Arena*);
template<> ::buffers::resources::Object_ObjectPhysicsSettings* Arena::CreateMaybeMessage<::buffers::resources::Object_ObjectPhysicsSettings>(Arena*);
template<> ::buffers::resources::Object_PhysicsShapePoint* Arena::CreateMaybeMessage<::buffers::resources::Object_PhysicsShapePoint>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace buffers {
namespace resources {

enum Object_PhysicsShape {
  Object_PhysicsShape_CIRCLE = 0,
  Object_PhysicsShape_BOX = 1,
  Object_PhysicsShape_SHAPE = 2
};
bool Object_PhysicsShape_IsValid(int value);
const Object_PhysicsShape Object_PhysicsShape_PhysicsShape_MIN = Object_PhysicsShape_CIRCLE;
const Object_PhysicsShape Object_PhysicsShape_PhysicsShape_MAX = Object_PhysicsShape_SHAPE;
const int Object_PhysicsShape_PhysicsShape_ARRAYSIZE = Object_PhysicsShape_PhysicsShape_MAX + 1;

const ::google::protobuf::EnumDescriptor* Object_PhysicsShape_descriptor();
inline const ::std::string& Object_PhysicsShape_Name(Object_PhysicsShape value) {
  return ::google::protobuf::internal::NameOfEnum(
    Object_PhysicsShape_descriptor(), value);
}
inline bool Object_PhysicsShape_Parse(
    const ::std::string& name, Object_PhysicsShape* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Object_PhysicsShape>(
    Object_PhysicsShape_descriptor(), name, value);
}
// ===================================================================

class Object_PhysicsShapePoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:buffers.resources.Object.PhysicsShapePoint) */ {
 public:
  Object_PhysicsShapePoint();
  virtual ~Object_PhysicsShapePoint();

  Object_PhysicsShapePoint(const Object_PhysicsShapePoint& from);

  inline Object_PhysicsShapePoint& operator=(const Object_PhysicsShapePoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object_PhysicsShapePoint(Object_PhysicsShapePoint&& from) noexcept
    : Object_PhysicsShapePoint() {
    *this = ::std::move(from);
  }

  inline Object_PhysicsShapePoint& operator=(Object_PhysicsShapePoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Object_PhysicsShapePoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object_PhysicsShapePoint* internal_default_instance() {
    return reinterpret_cast<const Object_PhysicsShapePoint*>(
               &_Object_PhysicsShapePoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Object_PhysicsShapePoint* other);
  friend void swap(Object_PhysicsShapePoint& a, Object_PhysicsShapePoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object_PhysicsShapePoint* New() const final {
    return CreateMaybeMessage<Object_PhysicsShapePoint>(NULL);
  }

  Object_PhysicsShapePoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Object_PhysicsShapePoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Object_PhysicsShapePoint& from);
  void MergeFrom(const Object_PhysicsShapePoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Object_PhysicsShapePoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:buffers.resources.Object.PhysicsShapePoint)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_Object_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Object_ObjectPhysicsSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:buffers.resources.Object.ObjectPhysicsSettings) */ {
 public:
  Object_ObjectPhysicsSettings();
  virtual ~Object_ObjectPhysicsSettings();

  Object_ObjectPhysicsSettings(const Object_ObjectPhysicsSettings& from);

  inline Object_ObjectPhysicsSettings& operator=(const Object_ObjectPhysicsSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object_ObjectPhysicsSettings(Object_ObjectPhysicsSettings&& from) noexcept
    : Object_ObjectPhysicsSettings() {
    *this = ::std::move(from);
  }

  inline Object_ObjectPhysicsSettings& operator=(Object_ObjectPhysicsSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Object_ObjectPhysicsSettings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object_ObjectPhysicsSettings* internal_default_instance() {
    return reinterpret_cast<const Object_ObjectPhysicsSettings*>(
               &_Object_ObjectPhysicsSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Object_ObjectPhysicsSettings* other);
  friend void swap(Object_ObjectPhysicsSettings& a, Object_ObjectPhysicsSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object_ObjectPhysicsSettings* New() const final {
    return CreateMaybeMessage<Object_ObjectPhysicsSettings>(NULL);
  }

  Object_ObjectPhysicsSettings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Object_ObjectPhysicsSettings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Object_ObjectPhysicsSettings& from);
  void MergeFrom(const Object_ObjectPhysicsSettings& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Object_ObjectPhysicsSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .buffers.resources.Object.PhysicsShapePoint phy_shape = 12 [(.buffers.gmx) = "PhysicsShapePoints/point", (.buffers.yyp) = "physicsShapePoints"];
  int phy_shape_size() const;
  void clear_phy_shape();
  static const int kPhyShapeFieldNumber = 12;
  ::buffers::resources::Object_PhysicsShapePoint* mutable_phy_shape(int index);
  ::google::protobuf::RepeatedPtrField< ::buffers::resources::Object_PhysicsShapePoint >*
      mutable_phy_shape();
  const ::buffers::resources::Object_PhysicsShapePoint& phy_shape(int index) const;
  ::buffers::resources::Object_PhysicsShapePoint* add_phy_shape();
  const ::google::protobuf::RepeatedPtrField< ::buffers::resources::Object_PhysicsShapePoint >&
      phy_shape() const;

  // optional double phy_density = 4 [(.buffers.gmx) = "PhysicsObjectDensity", (.buffers.yyp) = "physicsDensity"];
  bool has_phy_density() const;
  void clear_phy_density();
  static const int kPhyDensityFieldNumber = 4;
  double phy_density() const;
  void set_phy_density(double value);

  // optional .buffers.resources.Object.PhysicsShape phy_shape_type = 3 [(.buffers.gmx) = "PhysicsObjectShape", (.buffers.yyp) = "physicsShape"];
  bool has_phy_shape_type() const;
  void clear_phy_shape_type();
  static const int kPhyShapeTypeFieldNumber = 3;
  ::buffers::resources::Object_PhysicsShape phy_shape_type() const;
  void set_phy_shape_type(::buffers::resources::Object_PhysicsShape value);

  // optional int32 phy_group = 6 [(.buffers.gmx) = "PhysicsObjectGroup", (.buffers.yyp) = "physicsGroup"];
  bool has_phy_group() const;
  void clear_phy_group();
  static const int kPhyGroupFieldNumber = 6;
  ::google::protobuf::int32 phy_group() const;
  void set_phy_group(::google::protobuf::int32 value);

  // optional double phy_restitution = 5 [(.buffers.gmx) = "PhysicsObjectRestitution", (.buffers.yyp) = "physicsRestitution"];
  bool has_phy_restitution() const;
  void clear_phy_restitution();
  static const int kPhyRestitutionFieldNumber = 5;
  double phy_restitution() const;
  void set_phy_restitution(double value);

  // optional double phy_linear_damping = 7 [(.buffers.gmx) = "PhysicsObjectLinearDamping", (.buffers.yyp) = "physicsLinearDamping"];
  bool has_phy_linear_damping() const;
  void clear_phy_linear_damping();
  static const int kPhyLinearDampingFieldNumber = 7;
  double phy_linear_damping() const;
  void set_phy_linear_damping(double value);

  // optional double phy_angular_damping = 8 [(.buffers.gmx) = "PhysicsObjectAngularDamping", (.buffers.yyp) = "physicsAngularDamping"];
  bool has_phy_angular_damping() const;
  void clear_phy_angular_damping();
  static const int kPhyAngularDampingFieldNumber = 8;
  double phy_angular_damping() const;
  void set_phy_angular_damping(double value);

  // optional double phy_friction = 9 [(.buffers.gmx) = "PhysicsObjectFriction", (.buffers.yyp) = "physicsFriction"];
  bool has_phy_friction() const;
  void clear_phy_friction();
  static const int kPhyFrictionFieldNumber = 9;
  double phy_friction() const;
  void set_phy_friction(double value);

  // optional bool use_physics = 1 [(.buffers.gmx) = "PhysicsObject", (.buffers.yyp) = "physicsObject"];
  bool has_use_physics() const;
  void clear_use_physics();
  static const int kUsePhysicsFieldNumber = 1;
  bool use_physics() const;
  void set_use_physics(bool value);

  // optional bool phy_sensor = 2 [(.buffers.gmx) = "PhysicsObjectSensor", (.buffers.yyp) = "physicsSensor"];
  bool has_phy_sensor() const;
  void clear_phy_sensor();
  static const int kPhySensorFieldNumber = 2;
  bool phy_sensor() const;
  void set_phy_sensor(bool value);

  // optional bool phy_awake = 10 [(.buffers.gmx) = "PhysicsObjectAwake", (.buffers.yyp) = "physicsAwake"];
  bool has_phy_awake() const;
  void clear_phy_awake();
  static const int kPhyAwakeFieldNumber = 10;
  bool phy_awake() const;
  void set_phy_awake(bool value);

  // optional bool phy_kinematic = 11 [(.buffers.gmx) = "PhysicsObjectKinematic", (.buffers.yyp) = "physicsKinematic"];
  bool has_phy_kinematic() const;
  void clear_phy_kinematic();
  static const int kPhyKinematicFieldNumber = 11;
  bool phy_kinematic() const;
  void set_phy_kinematic(bool value);

  // @@protoc_insertion_point(class_scope:buffers.resources.Object.ObjectPhysicsSettings)
 private:
  void set_has_use_physics();
  void clear_has_use_physics();
  void set_has_phy_sensor();
  void clear_has_phy_sensor();
  void set_has_phy_shape_type();
  void clear_has_phy_shape_type();
  void set_has_phy_density();
  void clear_has_phy_density();
  void set_has_phy_restitution();
  void clear_has_phy_restitution();
  void set_has_phy_group();
  void clear_has_phy_group();
  void set_has_phy_linear_damping();
  void clear_has_phy_linear_damping();
  void set_has_phy_angular_damping();
  void clear_has_phy_angular_damping();
  void set_has_phy_friction();
  void clear_has_phy_friction();
  void set_has_phy_awake();
  void clear_has_phy_awake();
  void set_has_phy_kinematic();
  void clear_has_phy_kinematic();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::buffers::resources::Object_PhysicsShapePoint > phy_shape_;
  double phy_density_;
  int phy_shape_type_;
  ::google::protobuf::int32 phy_group_;
  double phy_restitution_;
  double phy_linear_damping_;
  double phy_angular_damping_;
  double phy_friction_;
  bool use_physics_;
  bool phy_sensor_;
  bool phy_awake_;
  bool phy_kinematic_;
  friend struct ::protobuf_Object_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:buffers.resources.Object) */ {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object(Object&& from) noexcept
    : Object() {
    *this = ::std::move(from);
  }

  inline Object& operator=(Object&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object* internal_default_instance() {
    return reinterpret_cast<const Object*>(
               &_Object_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Object* other);
  friend void swap(Object& a, Object& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object* New() const final {
    return CreateMaybeMessage<Object>(NULL);
  }

  Object* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Object>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Object* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Object_PhysicsShapePoint PhysicsShapePoint;
  typedef Object_ObjectPhysicsSettings ObjectPhysicsSettings;

  typedef Object_PhysicsShape PhysicsShape;
  static const PhysicsShape CIRCLE =
    Object_PhysicsShape_CIRCLE;
  static const PhysicsShape BOX =
    Object_PhysicsShape_BOX;
  static const PhysicsShape SHAPE =
    Object_PhysicsShape_SHAPE;
  static inline bool PhysicsShape_IsValid(int value) {
    return Object_PhysicsShape_IsValid(value);
  }
  static const PhysicsShape PhysicsShape_MIN =
    Object_PhysicsShape_PhysicsShape_MIN;
  static const PhysicsShape PhysicsShape_MAX =
    Object_PhysicsShape_PhysicsShape_MAX;
  static const int PhysicsShape_ARRAYSIZE =
    Object_PhysicsShape_PhysicsShape_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhysicsShape_descriptor() {
    return Object_PhysicsShape_descriptor();
  }
  static inline const ::std::string& PhysicsShape_Name(PhysicsShape value) {
    return Object_PhysicsShape_Name(value);
  }
  static inline bool PhysicsShape_Parse(const ::std::string& name,
      PhysicsShape* value) {
    return Object_PhysicsShape_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .buffers.resources.Event events = 10 [(.buffers.gmx) = "events/event", (.buffers.yyp) = "eventList"];
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 10;
  ::buffers::resources::Event* mutable_events(int index);
  ::google::protobuf::RepeatedPtrField< ::buffers::resources::Event >*
      mutable_events();
  const ::buffers::resources::Event& events(int index) const;
  ::buffers::resources::Event* add_events();
  const ::google::protobuf::RepeatedPtrField< ::buffers::resources::Event >&
      events() const;

  // optional string parent_name = 3 [(.buffers.gmx) = "parentName", (.buffers.yyp_id) = "parentObjectId"];
  bool has_parent_name() const;
  void clear_parent_name();
  static const int kParentNameFieldNumber = 3;
  const ::std::string& parent_name() const;
  void set_parent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_parent_name(::std::string&& value);
  #endif
  void set_parent_name(const char* value);
  void set_parent_name(const char* value, size_t size);
  ::std::string* mutable_parent_name();
  ::std::string* release_parent_name();
  void set_allocated_parent_name(::std::string* parent_name);

  // optional string sprite_name = 4 [(.buffers.gmx) = "spriteName", (.buffers.yyp_id) = "spriteId"];
  bool has_sprite_name() const;
  void clear_sprite_name();
  static const int kSpriteNameFieldNumber = 4;
  const ::std::string& sprite_name() const;
  void set_sprite_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sprite_name(::std::string&& value);
  #endif
  void set_sprite_name(const char* value);
  void set_sprite_name(const char* value, size_t size);
  ::std::string* mutable_sprite_name();
  ::std::string* release_sprite_name();
  void set_allocated_sprite_name(::std::string* sprite_name);

  // optional string mask_name = 5 [(.buffers.gmx) = "maskName", (.buffers.yyp_id) = "maskSpriteId"];
  bool has_mask_name() const;
  void clear_mask_name();
  static const int kMaskNameFieldNumber = 5;
  const ::std::string& mask_name() const;
  void set_mask_name(const ::std::string& value);
  #if LANG_CXX11
  void set_mask_name(::std::string&& value);
  #endif
  void set_mask_name(const char* value);
  void set_mask_name(const char* value, size_t size);
  ::std::string* mutable_mask_name();
  ::std::string* release_mask_name();
  void set_allocated_mask_name(::std::string* mask_name);

  // optional .buffers.resources.Object.ObjectPhysicsSettings physics_settings = 11 [(.buffers.gmx) = "EGM_NESTED"];
  bool has_physics_settings() const;
  void clear_physics_settings();
  static const int kPhysicsSettingsFieldNumber = 11;
  private:
  const ::buffers::resources::Object_ObjectPhysicsSettings& _internal_physics_settings() const;
  public:
  const ::buffers::resources::Object_ObjectPhysicsSettings& physics_settings() const;
  ::buffers::resources::Object_ObjectPhysicsSettings* release_physics_settings();
  ::buffers::resources::Object_ObjectPhysicsSettings* mutable_physics_settings();
  void set_allocated_physics_settings(::buffers::resources::Object_ObjectPhysicsSettings* physics_settings);

  // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 depth = 6 [(.buffers.yyp) = "YYP_DEPRECATED"];
  bool has_depth() const;
  void clear_depth();
  static const int kDepthFieldNumber = 6;
  ::google::protobuf::int32 depth() const;
  void set_depth(::google::protobuf::int32 value);

  // optional bool solid = 7;
  bool has_solid() const;
  void clear_solid();
  static const int kSolidFieldNumber = 7;
  bool solid() const;
  void set_solid(bool value);

  // optional bool visible = 8;
  bool has_visible() const;
  void clear_visible();
  static const int kVisibleFieldNumber = 8;
  bool visible() const;
  void set_visible(bool value);

  // optional bool persistent = 9;
  bool has_persistent() const;
  void clear_persistent();
  static const int kPersistentFieldNumber = 9;
  bool persistent() const;
  void set_persistent(bool value);

  // @@protoc_insertion_point(class_scope:buffers.resources.Object)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_parent_name();
  void clear_has_parent_name();
  void set_has_sprite_name();
  void clear_has_sprite_name();
  void set_has_mask_name();
  void clear_has_mask_name();
  void set_has_depth();
  void clear_has_depth();
  void set_has_solid();
  void clear_has_solid();
  void set_has_visible();
  void clear_has_visible();
  void set_has_persistent();
  void clear_has_persistent();
  void set_has_physics_settings();
  void clear_has_physics_settings();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::buffers::resources::Event > events_;
  ::google::protobuf::internal::ArenaStringPtr parent_name_;
  ::google::protobuf::internal::ArenaStringPtr sprite_name_;
  ::google::protobuf::internal::ArenaStringPtr mask_name_;
  ::buffers::resources::Object_ObjectPhysicsSettings* physics_settings_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 depth_;
  bool solid_;
  bool visible_;
  bool persistent_;
  friend struct ::protobuf_Object_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Object_PhysicsShapePoint

// optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
inline bool Object_PhysicsShapePoint::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Object_PhysicsShapePoint::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Object_PhysicsShapePoint::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Object_PhysicsShapePoint::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Object_PhysicsShapePoint::x() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.PhysicsShapePoint.x)
  return x_;
}
inline void Object_PhysicsShapePoint::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.PhysicsShapePoint.x)
}

// optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
inline bool Object_PhysicsShapePoint::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Object_PhysicsShapePoint::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Object_PhysicsShapePoint::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Object_PhysicsShapePoint::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Object_PhysicsShapePoint::y() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.PhysicsShapePoint.y)
  return y_;
}
inline void Object_PhysicsShapePoint::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.PhysicsShapePoint.y)
}

// -------------------------------------------------------------------

// Object_ObjectPhysicsSettings

// optional bool use_physics = 1 [(.buffers.gmx) = "PhysicsObject", (.buffers.yyp) = "physicsObject"];
inline bool Object_ObjectPhysicsSettings::has_use_physics() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_use_physics() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Object_ObjectPhysicsSettings::clear_has_use_physics() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Object_ObjectPhysicsSettings::clear_use_physics() {
  use_physics_ = false;
  clear_has_use_physics();
}
inline bool Object_ObjectPhysicsSettings::use_physics() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.use_physics)
  return use_physics_;
}
inline void Object_ObjectPhysicsSettings::set_use_physics(bool value) {
  set_has_use_physics();
  use_physics_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.use_physics)
}

// optional bool phy_sensor = 2 [(.buffers.gmx) = "PhysicsObjectSensor", (.buffers.yyp) = "physicsSensor"];
inline bool Object_ObjectPhysicsSettings::has_phy_sensor() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_sensor() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_sensor() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_sensor() {
  phy_sensor_ = false;
  clear_has_phy_sensor();
}
inline bool Object_ObjectPhysicsSettings::phy_sensor() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_sensor)
  return phy_sensor_;
}
inline void Object_ObjectPhysicsSettings::set_phy_sensor(bool value) {
  set_has_phy_sensor();
  phy_sensor_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_sensor)
}

// optional .buffers.resources.Object.PhysicsShape phy_shape_type = 3 [(.buffers.gmx) = "PhysicsObjectShape", (.buffers.yyp) = "physicsShape"];
inline bool Object_ObjectPhysicsSettings::has_phy_shape_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_shape_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_shape_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_shape_type() {
  phy_shape_type_ = 0;
  clear_has_phy_shape_type();
}
inline ::buffers::resources::Object_PhysicsShape Object_ObjectPhysicsSettings::phy_shape_type() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_shape_type)
  return static_cast< ::buffers::resources::Object_PhysicsShape >(phy_shape_type_);
}
inline void Object_ObjectPhysicsSettings::set_phy_shape_type(::buffers::resources::Object_PhysicsShape value) {
  assert(::buffers::resources::Object_PhysicsShape_IsValid(value));
  set_has_phy_shape_type();
  phy_shape_type_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_shape_type)
}

// optional double phy_density = 4 [(.buffers.gmx) = "PhysicsObjectDensity", (.buffers.yyp) = "physicsDensity"];
inline bool Object_ObjectPhysicsSettings::has_phy_density() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_density() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_density() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_density() {
  phy_density_ = 0;
  clear_has_phy_density();
}
inline double Object_ObjectPhysicsSettings::phy_density() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_density)
  return phy_density_;
}
inline void Object_ObjectPhysicsSettings::set_phy_density(double value) {
  set_has_phy_density();
  phy_density_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_density)
}

// optional double phy_restitution = 5 [(.buffers.gmx) = "PhysicsObjectRestitution", (.buffers.yyp) = "physicsRestitution"];
inline bool Object_ObjectPhysicsSettings::has_phy_restitution() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_restitution() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_restitution() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_restitution() {
  phy_restitution_ = 0;
  clear_has_phy_restitution();
}
inline double Object_ObjectPhysicsSettings::phy_restitution() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_restitution)
  return phy_restitution_;
}
inline void Object_ObjectPhysicsSettings::set_phy_restitution(double value) {
  set_has_phy_restitution();
  phy_restitution_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_restitution)
}

// optional int32 phy_group = 6 [(.buffers.gmx) = "PhysicsObjectGroup", (.buffers.yyp) = "physicsGroup"];
inline bool Object_ObjectPhysicsSettings::has_phy_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_group() {
  phy_group_ = 0;
  clear_has_phy_group();
}
inline ::google::protobuf::int32 Object_ObjectPhysicsSettings::phy_group() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_group)
  return phy_group_;
}
inline void Object_ObjectPhysicsSettings::set_phy_group(::google::protobuf::int32 value) {
  set_has_phy_group();
  phy_group_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_group)
}

// optional double phy_linear_damping = 7 [(.buffers.gmx) = "PhysicsObjectLinearDamping", (.buffers.yyp) = "physicsLinearDamping"];
inline bool Object_ObjectPhysicsSettings::has_phy_linear_damping() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_linear_damping() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_linear_damping() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_linear_damping() {
  phy_linear_damping_ = 0;
  clear_has_phy_linear_damping();
}
inline double Object_ObjectPhysicsSettings::phy_linear_damping() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_linear_damping)
  return phy_linear_damping_;
}
inline void Object_ObjectPhysicsSettings::set_phy_linear_damping(double value) {
  set_has_phy_linear_damping();
  phy_linear_damping_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_linear_damping)
}

// optional double phy_angular_damping = 8 [(.buffers.gmx) = "PhysicsObjectAngularDamping", (.buffers.yyp) = "physicsAngularDamping"];
inline bool Object_ObjectPhysicsSettings::has_phy_angular_damping() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_angular_damping() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_angular_damping() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_angular_damping() {
  phy_angular_damping_ = 0;
  clear_has_phy_angular_damping();
}
inline double Object_ObjectPhysicsSettings::phy_angular_damping() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_angular_damping)
  return phy_angular_damping_;
}
inline void Object_ObjectPhysicsSettings::set_phy_angular_damping(double value) {
  set_has_phy_angular_damping();
  phy_angular_damping_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_angular_damping)
}

// optional double phy_friction = 9 [(.buffers.gmx) = "PhysicsObjectFriction", (.buffers.yyp) = "physicsFriction"];
inline bool Object_ObjectPhysicsSettings::has_phy_friction() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_friction() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_friction() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_friction() {
  phy_friction_ = 0;
  clear_has_phy_friction();
}
inline double Object_ObjectPhysicsSettings::phy_friction() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_friction)
  return phy_friction_;
}
inline void Object_ObjectPhysicsSettings::set_phy_friction(double value) {
  set_has_phy_friction();
  phy_friction_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_friction)
}

// optional bool phy_awake = 10 [(.buffers.gmx) = "PhysicsObjectAwake", (.buffers.yyp) = "physicsAwake"];
inline bool Object_ObjectPhysicsSettings::has_phy_awake() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_awake() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_awake() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_awake() {
  phy_awake_ = false;
  clear_has_phy_awake();
}
inline bool Object_ObjectPhysicsSettings::phy_awake() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_awake)
  return phy_awake_;
}
inline void Object_ObjectPhysicsSettings::set_phy_awake(bool value) {
  set_has_phy_awake();
  phy_awake_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_awake)
}

// optional bool phy_kinematic = 11 [(.buffers.gmx) = "PhysicsObjectKinematic", (.buffers.yyp) = "physicsKinematic"];
inline bool Object_ObjectPhysicsSettings::has_phy_kinematic() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Object_ObjectPhysicsSettings::set_has_phy_kinematic() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Object_ObjectPhysicsSettings::clear_has_phy_kinematic() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Object_ObjectPhysicsSettings::clear_phy_kinematic() {
  phy_kinematic_ = false;
  clear_has_phy_kinematic();
}
inline bool Object_ObjectPhysicsSettings::phy_kinematic() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_kinematic)
  return phy_kinematic_;
}
inline void Object_ObjectPhysicsSettings::set_phy_kinematic(bool value) {
  set_has_phy_kinematic();
  phy_kinematic_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.ObjectPhysicsSettings.phy_kinematic)
}

// repeated .buffers.resources.Object.PhysicsShapePoint phy_shape = 12 [(.buffers.gmx) = "PhysicsShapePoints/point", (.buffers.yyp) = "physicsShapePoints"];
inline int Object_ObjectPhysicsSettings::phy_shape_size() const {
  return phy_shape_.size();
}
inline void Object_ObjectPhysicsSettings::clear_phy_shape() {
  phy_shape_.Clear();
}
inline ::buffers::resources::Object_PhysicsShapePoint* Object_ObjectPhysicsSettings::mutable_phy_shape(int index) {
  // @@protoc_insertion_point(field_mutable:buffers.resources.Object.ObjectPhysicsSettings.phy_shape)
  return phy_shape_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::buffers::resources::Object_PhysicsShapePoint >*
Object_ObjectPhysicsSettings::mutable_phy_shape() {
  // @@protoc_insertion_point(field_mutable_list:buffers.resources.Object.ObjectPhysicsSettings.phy_shape)
  return &phy_shape_;
}
inline const ::buffers::resources::Object_PhysicsShapePoint& Object_ObjectPhysicsSettings::phy_shape(int index) const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.ObjectPhysicsSettings.phy_shape)
  return phy_shape_.Get(index);
}
inline ::buffers::resources::Object_PhysicsShapePoint* Object_ObjectPhysicsSettings::add_phy_shape() {
  // @@protoc_insertion_point(field_add:buffers.resources.Object.ObjectPhysicsSettings.phy_shape)
  return phy_shape_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::buffers::resources::Object_PhysicsShapePoint >&
Object_ObjectPhysicsSettings::phy_shape() const {
  // @@protoc_insertion_point(field_list:buffers.resources.Object.ObjectPhysicsSettings.phy_shape)
  return phy_shape_;
}

// -------------------------------------------------------------------

// Object

// optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
inline bool Object::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Object::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Object::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Object::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Object::id() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.id)
  return id_;
}
inline void Object::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.id)
}

// optional string parent_name = 3 [(.buffers.gmx) = "parentName", (.buffers.yyp_id) = "parentObjectId"];
inline bool Object::has_parent_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Object::set_has_parent_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Object::clear_has_parent_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Object::clear_parent_name() {
  parent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parent_name();
}
inline const ::std::string& Object::parent_name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.parent_name)
  return parent_name_.GetNoArena();
}
inline void Object::set_parent_name(const ::std::string& value) {
  set_has_parent_name();
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Object.parent_name)
}
#if LANG_CXX11
inline void Object::set_parent_name(::std::string&& value) {
  set_has_parent_name();
  parent_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Object.parent_name)
}
#endif
inline void Object::set_parent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_parent_name();
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Object.parent_name)
}
inline void Object::set_parent_name(const char* value, size_t size) {
  set_has_parent_name();
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Object.parent_name)
}
inline ::std::string* Object::mutable_parent_name() {
  set_has_parent_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Object.parent_name)
  return parent_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_parent_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Object.parent_name)
  if (!has_parent_name()) {
    return NULL;
  }
  clear_has_parent_name();
  return parent_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_parent_name(::std::string* parent_name) {
  if (parent_name != NULL) {
    set_has_parent_name();
  } else {
    clear_has_parent_name();
  }
  parent_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Object.parent_name)
}

// optional string sprite_name = 4 [(.buffers.gmx) = "spriteName", (.buffers.yyp_id) = "spriteId"];
inline bool Object::has_sprite_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Object::set_has_sprite_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Object::clear_has_sprite_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Object::clear_sprite_name() {
  sprite_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sprite_name();
}
inline const ::std::string& Object::sprite_name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.sprite_name)
  return sprite_name_.GetNoArena();
}
inline void Object::set_sprite_name(const ::std::string& value) {
  set_has_sprite_name();
  sprite_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Object.sprite_name)
}
#if LANG_CXX11
inline void Object::set_sprite_name(::std::string&& value) {
  set_has_sprite_name();
  sprite_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Object.sprite_name)
}
#endif
inline void Object::set_sprite_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sprite_name();
  sprite_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Object.sprite_name)
}
inline void Object::set_sprite_name(const char* value, size_t size) {
  set_has_sprite_name();
  sprite_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Object.sprite_name)
}
inline ::std::string* Object::mutable_sprite_name() {
  set_has_sprite_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Object.sprite_name)
  return sprite_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_sprite_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Object.sprite_name)
  if (!has_sprite_name()) {
    return NULL;
  }
  clear_has_sprite_name();
  return sprite_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_sprite_name(::std::string* sprite_name) {
  if (sprite_name != NULL) {
    set_has_sprite_name();
  } else {
    clear_has_sprite_name();
  }
  sprite_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sprite_name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Object.sprite_name)
}

// optional string mask_name = 5 [(.buffers.gmx) = "maskName", (.buffers.yyp_id) = "maskSpriteId"];
inline bool Object::has_mask_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Object::set_has_mask_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Object::clear_has_mask_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Object::clear_mask_name() {
  mask_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mask_name();
}
inline const ::std::string& Object::mask_name() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.mask_name)
  return mask_name_.GetNoArena();
}
inline void Object::set_mask_name(const ::std::string& value) {
  set_has_mask_name();
  mask_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:buffers.resources.Object.mask_name)
}
#if LANG_CXX11
inline void Object::set_mask_name(::std::string&& value) {
  set_has_mask_name();
  mask_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:buffers.resources.Object.mask_name)
}
#endif
inline void Object::set_mask_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mask_name();
  mask_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:buffers.resources.Object.mask_name)
}
inline void Object::set_mask_name(const char* value, size_t size) {
  set_has_mask_name();
  mask_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:buffers.resources.Object.mask_name)
}
inline ::std::string* Object::mutable_mask_name() {
  set_has_mask_name();
  // @@protoc_insertion_point(field_mutable:buffers.resources.Object.mask_name)
  return mask_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Object::release_mask_name() {
  // @@protoc_insertion_point(field_release:buffers.resources.Object.mask_name)
  if (!has_mask_name()) {
    return NULL;
  }
  clear_has_mask_name();
  return mask_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Object::set_allocated_mask_name(::std::string* mask_name) {
  if (mask_name != NULL) {
    set_has_mask_name();
  } else {
    clear_has_mask_name();
  }
  mask_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mask_name);
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Object.mask_name)
}

// optional int32 depth = 6 [(.buffers.yyp) = "YYP_DEPRECATED"];
inline bool Object::has_depth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Object::set_has_depth() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Object::clear_has_depth() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Object::clear_depth() {
  depth_ = 0;
  clear_has_depth();
}
inline ::google::protobuf::int32 Object::depth() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.depth)
  return depth_;
}
inline void Object::set_depth(::google::protobuf::int32 value) {
  set_has_depth();
  depth_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.depth)
}

// optional bool solid = 7;
inline bool Object::has_solid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Object::set_has_solid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Object::clear_has_solid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Object::clear_solid() {
  solid_ = false;
  clear_has_solid();
}
inline bool Object::solid() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.solid)
  return solid_;
}
inline void Object::set_solid(bool value) {
  set_has_solid();
  solid_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.solid)
}

// optional bool visible = 8;
inline bool Object::has_visible() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Object::set_has_visible() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Object::clear_has_visible() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Object::clear_visible() {
  visible_ = false;
  clear_has_visible();
}
inline bool Object::visible() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.visible)
  return visible_;
}
inline void Object::set_visible(bool value) {
  set_has_visible();
  visible_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.visible)
}

// optional bool persistent = 9;
inline bool Object::has_persistent() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Object::set_has_persistent() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Object::clear_has_persistent() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Object::clear_persistent() {
  persistent_ = false;
  clear_has_persistent();
}
inline bool Object::persistent() const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.persistent)
  return persistent_;
}
inline void Object::set_persistent(bool value) {
  set_has_persistent();
  persistent_ = value;
  // @@protoc_insertion_point(field_set:buffers.resources.Object.persistent)
}

// repeated .buffers.resources.Event events = 10 [(.buffers.gmx) = "events/event", (.buffers.yyp) = "eventList"];
inline int Object::events_size() const {
  return events_.size();
}
inline ::buffers::resources::Event* Object::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:buffers.resources.Object.events)
  return events_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::buffers::resources::Event >*
Object::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:buffers.resources.Object.events)
  return &events_;
}
inline const ::buffers::resources::Event& Object::events(int index) const {
  // @@protoc_insertion_point(field_get:buffers.resources.Object.events)
  return events_.Get(index);
}
inline ::buffers::resources::Event* Object::add_events() {
  // @@protoc_insertion_point(field_add:buffers.resources.Object.events)
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::buffers::resources::Event >&
Object::events() const {
  // @@protoc_insertion_point(field_list:buffers.resources.Object.events)
  return events_;
}

// optional .buffers.resources.Object.ObjectPhysicsSettings physics_settings = 11 [(.buffers.gmx) = "EGM_NESTED"];
inline bool Object::has_physics_settings() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Object::set_has_physics_settings() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Object::clear_has_physics_settings() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Object::clear_physics_settings() {
  if (physics_settings_ != NULL) physics_settings_->Clear();
  clear_has_physics_settings();
}
inline const ::buffers::resources::Object_ObjectPhysicsSettings& Object::_internal_physics_settings() const {
  return *physics_settings_;
}
inline const ::buffers::resources::Object_ObjectPhysicsSettings& Object::physics_settings() const {
  const ::buffers::resources::Object_ObjectPhysicsSettings* p = physics_settings_;
  // @@protoc_insertion_point(field_get:buffers.resources.Object.physics_settings)
  return p != NULL ? *p : *reinterpret_cast<const ::buffers::resources::Object_ObjectPhysicsSettings*>(
      &::buffers::resources::_Object_ObjectPhysicsSettings_default_instance_);
}
inline ::buffers::resources::Object_ObjectPhysicsSettings* Object::release_physics_settings() {
  // @@protoc_insertion_point(field_release:buffers.resources.Object.physics_settings)
  clear_has_physics_settings();
  ::buffers::resources::Object_ObjectPhysicsSettings* temp = physics_settings_;
  physics_settings_ = NULL;
  return temp;
}
inline ::buffers::resources::Object_ObjectPhysicsSettings* Object::mutable_physics_settings() {
  set_has_physics_settings();
  if (physics_settings_ == NULL) {
    auto* p = CreateMaybeMessage<::buffers::resources::Object_ObjectPhysicsSettings>(GetArenaNoVirtual());
    physics_settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:buffers.resources.Object.physics_settings)
  return physics_settings_;
}
inline void Object::set_allocated_physics_settings(::buffers::resources::Object_ObjectPhysicsSettings* physics_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete physics_settings_;
  }
  if (physics_settings) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      physics_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, physics_settings, submessage_arena);
    }
    set_has_physics_settings();
  } else {
    clear_has_physics_settings();
  }
  physics_settings_ = physics_settings;
  // @@protoc_insertion_point(field_set_allocated:buffers.resources.Object.physics_settings)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace resources
}  // namespace buffers

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::buffers::resources::Object_PhysicsShape> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::buffers::resources::Object_PhysicsShape>() {
  return ::buffers::resources::Object_PhysicsShape_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Object_2eproto
