// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Object.proto

#include "Object.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Event_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Event_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Event;
}  // namespace protobuf_Event_2eproto
namespace protobuf_Object_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Object_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Object_PhysicsShapePoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Object_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Object_ObjectPhysicsSettings;
}  // namespace protobuf_Object_2eproto
namespace buffers {
namespace resources {
class Object_PhysicsShapePointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object_PhysicsShapePoint>
      _instance;
} _Object_PhysicsShapePoint_default_instance_;
class Object_ObjectPhysicsSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object_ObjectPhysicsSettings>
      _instance;
} _Object_ObjectPhysicsSettings_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object>
      _instance;
} _Object_default_instance_;
}  // namespace resources
}  // namespace buffers
namespace protobuf_Object_2eproto {
static void InitDefaultsObject_PhysicsShapePoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::buffers::resources::_Object_PhysicsShapePoint_default_instance_;
    new (ptr) ::buffers::resources::Object_PhysicsShapePoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Object_PhysicsShapePoint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Object_PhysicsShapePoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObject_PhysicsShapePoint}, {}};

static void InitDefaultsObject_ObjectPhysicsSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::buffers::resources::_Object_ObjectPhysicsSettings_default_instance_;
    new (ptr) ::buffers::resources::Object_ObjectPhysicsSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Object_ObjectPhysicsSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Object_ObjectPhysicsSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObject_ObjectPhysicsSettings}, {
      &protobuf_Object_2eproto::scc_info_Object_PhysicsShapePoint.base,}};

static void InitDefaultsObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::buffers::resources::_Object_default_instance_;
    new (ptr) ::buffers::resources::Object();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Object::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Object =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObject}, {
      &protobuf_Event_2eproto::scc_info_Event.base,
      &protobuf_Object_2eproto::scc_info_Object_ObjectPhysicsSettings.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Object_PhysicsShapePoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Object_ObjectPhysicsSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Object.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_PhysicsShapePoint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_PhysicsShapePoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_PhysicsShapePoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_PhysicsShapePoint, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, use_physics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_sensor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_shape_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_density_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_restitution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_linear_damping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_angular_damping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_friction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_awake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_kinematic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object_ObjectPhysicsSettings, phy_shape_),
  7,
  8,
  1,
  0,
  3,
  2,
  4,
  5,
  6,
  9,
  10,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, parent_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, sprite_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, mask_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, solid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, persistent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Object, physics_settings_),
  4,
  0,
  1,
  2,
  5,
  6,
  7,
  8,
  ~0u,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::buffers::resources::Object_PhysicsShapePoint)},
  { 9, 26, sizeof(::buffers::resources::Object_ObjectPhysicsSettings)},
  { 38, 53, sizeof(::buffers::resources::Object)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Object_PhysicsShapePoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Object_ObjectPhysicsSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Object_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Object.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Object.proto\022\021buffers.resources\032\roptio"
      "ns.proto\032\013Event.proto\"\340\013\n\006Object\022\036\n\002id\030\002"
      " \001(\005B\022\222\265\030\016GMX_DEPRECATED\0225\n\013parent_name\030"
      "\003 \001(\tB \222\265\030\nparentName\252\265\030\016parentObjectId\022"
      "/\n\013sprite_name\030\004 \001(\tB\032\222\265\030\nspriteName\252\265\030\010"
      "spriteId\022/\n\tmask_name\030\005 \001(\tB\034\222\265\030\010maskNam"
      "e\252\265\030\014maskSpriteId\022!\n\005depth\030\006 \001(\005B\022\242\265\030\016YY"
      "P_DEPRECATED\022\r\n\005solid\030\007 \001(\010\022\017\n\007visible\030\010"
      " \001(\010\022\022\n\npersistent\030\t \001(\010\022G\n\006events\030\n \003(\013"
      "2\030.buffers.resources.EventB\035\222\265\030\014events/e"
      "vent\242\265\030\teventList\022Y\n\020physics_settings\030\013 "
      "\001(\0132/.buffers.resources.Object.ObjectPhy"
      "sicsSettingsB\016\222\265\030\nEGM_NESTED\032K\n\021PhysicsS"
      "hapePoint\022\032\n\001x\030\001 \001(\005B\017\222\265\030\013GMX_SPLIT/0\022\032\n"
      "\001y\030\002 \001(\005B\017\222\265\030\013GMX_SPLIT/1\032\244\007\n\025ObjectPhys"
      "icsSettings\0227\n\013use_physics\030\001 \001(\010B\"\222\265\030\rPh"
      "ysicsObject\242\265\030\rphysicsObject\022<\n\nphy_sens"
      "or\030\002 \001(\010B(\222\265\030\023PhysicsObjectSensor\242\265\030\rphy"
      "sicsSensor\022f\n\016phy_shape_type\030\003 \001(\0162&.buf"
      "fers.resources.Object.PhysicsShapeB&\222\265\030\022"
      "PhysicsObjectShape\242\265\030\014physicsShape\022\?\n\013ph"
      "y_density\030\004 \001(\001B*\222\265\030\024PhysicsObjectDensit"
      "y\242\265\030\016physicsDensity\022K\n\017phy_restitution\030\005"
      " \001(\001B2\222\265\030\030PhysicsObjectRestitution\242\265\030\022ph"
      "ysicsRestitution\0229\n\tphy_group\030\006 \001(\005B&\222\265\030"
      "\022PhysicsObjectGroup\242\265\030\014physicsGroup\022R\n\022p"
      "hy_linear_damping\030\007 \001(\001B6\222\265\030\032PhysicsObje"
      "ctLinearDamping\242\265\030\024physicsLinearDamping\022"
      "U\n\023phy_angular_damping\030\010 \001(\001B8\222\265\030\033Physic"
      "sObjectAngularDamping\242\265\030\025physicsAngularD"
      "amping\022B\n\014phy_friction\030\t \001(\001B,\222\265\030\025Physic"
      "sObjectFriction\242\265\030\017physicsFriction\0229\n\tph"
      "y_awake\030\n \001(\010B&\222\265\030\022PhysicsObjectAwake\242\265\030"
      "\014physicsAwake\022E\n\rphy_kinematic\030\013 \001(\010B.\222\265"
      "\030\026PhysicsObjectKinematic\242\265\030\020physicsKinem"
      "atic\022r\n\tphy_shape\030\014 \003(\0132+.buffers.resour"
      "ces.Object.PhysicsShapePointB2\222\265\030\030Physic"
      "sShapePoints/point\242\265\030\022physicsShapePoints"
      "\".\n\014PhysicsShape\022\n\n\006CIRCLE\020\000\022\007\n\003BOX\020\001\022\t\n"
      "\005SHAPE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1568);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Object.proto", &protobuf_RegisterTypes);
  ::protobuf_options_2eproto::AddDescriptors();
  ::protobuf_Event_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Object_2eproto
namespace buffers {
namespace resources {
const ::google::protobuf::EnumDescriptor* Object_PhysicsShape_descriptor() {
  protobuf_Object_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Object_2eproto::file_level_enum_descriptors[0];
}
bool Object_PhysicsShape_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Object_PhysicsShape Object::CIRCLE;
const Object_PhysicsShape Object::BOX;
const Object_PhysicsShape Object::SHAPE;
const Object_PhysicsShape Object::PhysicsShape_MIN;
const Object_PhysicsShape Object::PhysicsShape_MAX;
const int Object::PhysicsShape_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Object_PhysicsShapePoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object_PhysicsShapePoint::kXFieldNumber;
const int Object_PhysicsShapePoint::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object_PhysicsShapePoint::Object_PhysicsShapePoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Object_2eproto::scc_info_Object_PhysicsShapePoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Object.PhysicsShapePoint)
}
Object_PhysicsShapePoint::Object_PhysicsShapePoint(const Object_PhysicsShapePoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Object.PhysicsShapePoint)
}

void Object_PhysicsShapePoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Object_PhysicsShapePoint::~Object_PhysicsShapePoint() {
  // @@protoc_insertion_point(destructor:buffers.resources.Object.PhysicsShapePoint)
  SharedDtor();
}

void Object_PhysicsShapePoint::SharedDtor() {
}

void Object_PhysicsShapePoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Object_PhysicsShapePoint::descriptor() {
  ::protobuf_Object_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Object_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object_PhysicsShapePoint& Object_PhysicsShapePoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Object_2eproto::scc_info_Object_PhysicsShapePoint.base);
  return *internal_default_instance();
}


void Object_PhysicsShapePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Object.PhysicsShapePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Object_PhysicsShapePoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Object.PhysicsShapePoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Object.PhysicsShapePoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Object.PhysicsShapePoint)
  return false;
#undef DO_
}

void Object_PhysicsShapePoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Object.PhysicsShapePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Object.PhysicsShapePoint)
}

::google::protobuf::uint8* Object_PhysicsShapePoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Object.PhysicsShapePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Object.PhysicsShapePoint)
  return target;
}

size_t Object_PhysicsShapePoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Object.PhysicsShapePoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 x = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object_PhysicsShapePoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Object.PhysicsShapePoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Object_PhysicsShapePoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object_PhysicsShapePoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Object.PhysicsShapePoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Object.PhysicsShapePoint)
    MergeFrom(*source);
  }
}

void Object_PhysicsShapePoint::MergeFrom(const Object_PhysicsShapePoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Object.PhysicsShapePoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Object_PhysicsShapePoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Object.PhysicsShapePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object_PhysicsShapePoint::CopyFrom(const Object_PhysicsShapePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Object.PhysicsShapePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object_PhysicsShapePoint::IsInitialized() const {
  return true;
}

void Object_PhysicsShapePoint::Swap(Object_PhysicsShapePoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object_PhysicsShapePoint::InternalSwap(Object_PhysicsShapePoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Object_PhysicsShapePoint::GetMetadata() const {
  protobuf_Object_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Object_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Object_ObjectPhysicsSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object_ObjectPhysicsSettings::kUsePhysicsFieldNumber;
const int Object_ObjectPhysicsSettings::kPhySensorFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyShapeTypeFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyDensityFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyRestitutionFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyGroupFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyLinearDampingFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyAngularDampingFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyFrictionFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyAwakeFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyKinematicFieldNumber;
const int Object_ObjectPhysicsSettings::kPhyShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object_ObjectPhysicsSettings::Object_ObjectPhysicsSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Object_2eproto::scc_info_Object_ObjectPhysicsSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Object.ObjectPhysicsSettings)
}
Object_ObjectPhysicsSettings::Object_ObjectPhysicsSettings(const Object_ObjectPhysicsSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      phy_shape_(from.phy_shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&phy_density_, &from.phy_density_,
    static_cast<size_t>(reinterpret_cast<char*>(&phy_kinematic_) -
    reinterpret_cast<char*>(&phy_density_)) + sizeof(phy_kinematic_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Object.ObjectPhysicsSettings)
}

void Object_ObjectPhysicsSettings::SharedCtor() {
  ::memset(&phy_density_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phy_kinematic_) -
      reinterpret_cast<char*>(&phy_density_)) + sizeof(phy_kinematic_));
}

Object_ObjectPhysicsSettings::~Object_ObjectPhysicsSettings() {
  // @@protoc_insertion_point(destructor:buffers.resources.Object.ObjectPhysicsSettings)
  SharedDtor();
}

void Object_ObjectPhysicsSettings::SharedDtor() {
}

void Object_ObjectPhysicsSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Object_ObjectPhysicsSettings::descriptor() {
  ::protobuf_Object_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Object_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object_ObjectPhysicsSettings& Object_ObjectPhysicsSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Object_2eproto::scc_info_Object_ObjectPhysicsSettings.base);
  return *internal_default_instance();
}


void Object_ObjectPhysicsSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Object.ObjectPhysicsSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phy_shape_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&phy_density_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_physics_) -
        reinterpret_cast<char*>(&phy_density_)) + sizeof(use_physics_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&phy_sensor_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phy_kinematic_) -
        reinterpret_cast<char*>(&phy_sensor_)) + sizeof(phy_kinematic_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Object_ObjectPhysicsSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Object.ObjectPhysicsSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool use_physics = 1 [(.buffers.gmx) = "PhysicsObject", (.buffers.yyp) = "physicsObject"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_use_physics();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_physics_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool phy_sensor = 2 [(.buffers.gmx) = "PhysicsObjectSensor", (.buffers.yyp) = "physicsSensor"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_phy_sensor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &phy_sensor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .buffers.resources.Object.PhysicsShape phy_shape_type = 3 [(.buffers.gmx) = "PhysicsObjectShape", (.buffers.yyp) = "physicsShape"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::buffers::resources::Object_PhysicsShape_IsValid(value)) {
            set_phy_shape_type(static_cast< ::buffers::resources::Object_PhysicsShape >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_density = 4 [(.buffers.gmx) = "PhysicsObjectDensity", (.buffers.yyp) = "physicsDensity"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_phy_density();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_density_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_restitution = 5 [(.buffers.gmx) = "PhysicsObjectRestitution", (.buffers.yyp) = "physicsRestitution"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_phy_restitution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_restitution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phy_group = 6 [(.buffers.gmx) = "PhysicsObjectGroup", (.buffers.yyp) = "physicsGroup"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_phy_group();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phy_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_linear_damping = 7 [(.buffers.gmx) = "PhysicsObjectLinearDamping", (.buffers.yyp) = "physicsLinearDamping"];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_phy_linear_damping();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_linear_damping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_angular_damping = 8 [(.buffers.gmx) = "PhysicsObjectAngularDamping", (.buffers.yyp) = "physicsAngularDamping"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_phy_angular_damping();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_angular_damping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_friction = 9 [(.buffers.gmx) = "PhysicsObjectFriction", (.buffers.yyp) = "physicsFriction"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_phy_friction();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_friction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool phy_awake = 10 [(.buffers.gmx) = "PhysicsObjectAwake", (.buffers.yyp) = "physicsAwake"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_phy_awake();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &phy_awake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool phy_kinematic = 11 [(.buffers.gmx) = "PhysicsObjectKinematic", (.buffers.yyp) = "physicsKinematic"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_phy_kinematic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &phy_kinematic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Object.PhysicsShapePoint phy_shape = 12 [(.buffers.gmx) = "PhysicsShapePoints/point", (.buffers.yyp) = "physicsShapePoints"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_phy_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Object.ObjectPhysicsSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Object.ObjectPhysicsSettings)
  return false;
#undef DO_
}

void Object_ObjectPhysicsSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Object.ObjectPhysicsSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_physics = 1 [(.buffers.gmx) = "PhysicsObject", (.buffers.yyp) = "physicsObject"];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_physics(), output);
  }

  // optional bool phy_sensor = 2 [(.buffers.gmx) = "PhysicsObjectSensor", (.buffers.yyp) = "physicsSensor"];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->phy_sensor(), output);
  }

  // optional .buffers.resources.Object.PhysicsShape phy_shape_type = 3 [(.buffers.gmx) = "PhysicsObjectShape", (.buffers.yyp) = "physicsShape"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->phy_shape_type(), output);
  }

  // optional double phy_density = 4 [(.buffers.gmx) = "PhysicsObjectDensity", (.buffers.yyp) = "physicsDensity"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->phy_density(), output);
  }

  // optional double phy_restitution = 5 [(.buffers.gmx) = "PhysicsObjectRestitution", (.buffers.yyp) = "physicsRestitution"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->phy_restitution(), output);
  }

  // optional int32 phy_group = 6 [(.buffers.gmx) = "PhysicsObjectGroup", (.buffers.yyp) = "physicsGroup"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->phy_group(), output);
  }

  // optional double phy_linear_damping = 7 [(.buffers.gmx) = "PhysicsObjectLinearDamping", (.buffers.yyp) = "physicsLinearDamping"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->phy_linear_damping(), output);
  }

  // optional double phy_angular_damping = 8 [(.buffers.gmx) = "PhysicsObjectAngularDamping", (.buffers.yyp) = "physicsAngularDamping"];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->phy_angular_damping(), output);
  }

  // optional double phy_friction = 9 [(.buffers.gmx) = "PhysicsObjectFriction", (.buffers.yyp) = "physicsFriction"];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->phy_friction(), output);
  }

  // optional bool phy_awake = 10 [(.buffers.gmx) = "PhysicsObjectAwake", (.buffers.yyp) = "physicsAwake"];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->phy_awake(), output);
  }

  // optional bool phy_kinematic = 11 [(.buffers.gmx) = "PhysicsObjectKinematic", (.buffers.yyp) = "physicsKinematic"];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->phy_kinematic(), output);
  }

  // repeated .buffers.resources.Object.PhysicsShapePoint phy_shape = 12 [(.buffers.gmx) = "PhysicsShapePoints/point", (.buffers.yyp) = "physicsShapePoints"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->phy_shape_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->phy_shape(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Object.ObjectPhysicsSettings)
}

::google::protobuf::uint8* Object_ObjectPhysicsSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Object.ObjectPhysicsSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_physics = 1 [(.buffers.gmx) = "PhysicsObject", (.buffers.yyp) = "physicsObject"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_physics(), target);
  }

  // optional bool phy_sensor = 2 [(.buffers.gmx) = "PhysicsObjectSensor", (.buffers.yyp) = "physicsSensor"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->phy_sensor(), target);
  }

  // optional .buffers.resources.Object.PhysicsShape phy_shape_type = 3 [(.buffers.gmx) = "PhysicsObjectShape", (.buffers.yyp) = "physicsShape"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->phy_shape_type(), target);
  }

  // optional double phy_density = 4 [(.buffers.gmx) = "PhysicsObjectDensity", (.buffers.yyp) = "physicsDensity"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->phy_density(), target);
  }

  // optional double phy_restitution = 5 [(.buffers.gmx) = "PhysicsObjectRestitution", (.buffers.yyp) = "physicsRestitution"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->phy_restitution(), target);
  }

  // optional int32 phy_group = 6 [(.buffers.gmx) = "PhysicsObjectGroup", (.buffers.yyp) = "physicsGroup"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->phy_group(), target);
  }

  // optional double phy_linear_damping = 7 [(.buffers.gmx) = "PhysicsObjectLinearDamping", (.buffers.yyp) = "physicsLinearDamping"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->phy_linear_damping(), target);
  }

  // optional double phy_angular_damping = 8 [(.buffers.gmx) = "PhysicsObjectAngularDamping", (.buffers.yyp) = "physicsAngularDamping"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->phy_angular_damping(), target);
  }

  // optional double phy_friction = 9 [(.buffers.gmx) = "PhysicsObjectFriction", (.buffers.yyp) = "physicsFriction"];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->phy_friction(), target);
  }

  // optional bool phy_awake = 10 [(.buffers.gmx) = "PhysicsObjectAwake", (.buffers.yyp) = "physicsAwake"];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->phy_awake(), target);
  }

  // optional bool phy_kinematic = 11 [(.buffers.gmx) = "PhysicsObjectKinematic", (.buffers.yyp) = "physicsKinematic"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->phy_kinematic(), target);
  }

  // repeated .buffers.resources.Object.PhysicsShapePoint phy_shape = 12 [(.buffers.gmx) = "PhysicsShapePoints/point", (.buffers.yyp) = "physicsShapePoints"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->phy_shape_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->phy_shape(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Object.ObjectPhysicsSettings)
  return target;
}

size_t Object_ObjectPhysicsSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Object.ObjectPhysicsSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Object.PhysicsShapePoint phy_shape = 12 [(.buffers.gmx) = "PhysicsShapePoints/point", (.buffers.yyp) = "physicsShapePoints"];
  {
    unsigned int count = static_cast<unsigned int>(this->phy_shape_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->phy_shape(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional double phy_density = 4 [(.buffers.gmx) = "PhysicsObjectDensity", (.buffers.yyp) = "physicsDensity"];
    if (has_phy_density()) {
      total_size += 1 + 8;
    }

    // optional .buffers.resources.Object.PhysicsShape phy_shape_type = 3 [(.buffers.gmx) = "PhysicsObjectShape", (.buffers.yyp) = "physicsShape"];
    if (has_phy_shape_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->phy_shape_type());
    }

    // optional int32 phy_group = 6 [(.buffers.gmx) = "PhysicsObjectGroup", (.buffers.yyp) = "physicsGroup"];
    if (has_phy_group()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phy_group());
    }

    // optional double phy_restitution = 5 [(.buffers.gmx) = "PhysicsObjectRestitution", (.buffers.yyp) = "physicsRestitution"];
    if (has_phy_restitution()) {
      total_size += 1 + 8;
    }

    // optional double phy_linear_damping = 7 [(.buffers.gmx) = "PhysicsObjectLinearDamping", (.buffers.yyp) = "physicsLinearDamping"];
    if (has_phy_linear_damping()) {
      total_size += 1 + 8;
    }

    // optional double phy_angular_damping = 8 [(.buffers.gmx) = "PhysicsObjectAngularDamping", (.buffers.yyp) = "physicsAngularDamping"];
    if (has_phy_angular_damping()) {
      total_size += 1 + 8;
    }

    // optional double phy_friction = 9 [(.buffers.gmx) = "PhysicsObjectFriction", (.buffers.yyp) = "physicsFriction"];
    if (has_phy_friction()) {
      total_size += 1 + 8;
    }

    // optional bool use_physics = 1 [(.buffers.gmx) = "PhysicsObject", (.buffers.yyp) = "physicsObject"];
    if (has_use_physics()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool phy_sensor = 2 [(.buffers.gmx) = "PhysicsObjectSensor", (.buffers.yyp) = "physicsSensor"];
    if (has_phy_sensor()) {
      total_size += 1 + 1;
    }

    // optional bool phy_awake = 10 [(.buffers.gmx) = "PhysicsObjectAwake", (.buffers.yyp) = "physicsAwake"];
    if (has_phy_awake()) {
      total_size += 1 + 1;
    }

    // optional bool phy_kinematic = 11 [(.buffers.gmx) = "PhysicsObjectKinematic", (.buffers.yyp) = "physicsKinematic"];
    if (has_phy_kinematic()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object_ObjectPhysicsSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Object.ObjectPhysicsSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const Object_ObjectPhysicsSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object_ObjectPhysicsSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Object.ObjectPhysicsSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Object.ObjectPhysicsSettings)
    MergeFrom(*source);
  }
}

void Object_ObjectPhysicsSettings::MergeFrom(const Object_ObjectPhysicsSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Object.ObjectPhysicsSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  phy_shape_.MergeFrom(from.phy_shape_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      phy_density_ = from.phy_density_;
    }
    if (cached_has_bits & 0x00000002u) {
      phy_shape_type_ = from.phy_shape_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      phy_group_ = from.phy_group_;
    }
    if (cached_has_bits & 0x00000008u) {
      phy_restitution_ = from.phy_restitution_;
    }
    if (cached_has_bits & 0x00000010u) {
      phy_linear_damping_ = from.phy_linear_damping_;
    }
    if (cached_has_bits & 0x00000020u) {
      phy_angular_damping_ = from.phy_angular_damping_;
    }
    if (cached_has_bits & 0x00000040u) {
      phy_friction_ = from.phy_friction_;
    }
    if (cached_has_bits & 0x00000080u) {
      use_physics_ = from.use_physics_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      phy_sensor_ = from.phy_sensor_;
    }
    if (cached_has_bits & 0x00000200u) {
      phy_awake_ = from.phy_awake_;
    }
    if (cached_has_bits & 0x00000400u) {
      phy_kinematic_ = from.phy_kinematic_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Object_ObjectPhysicsSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Object.ObjectPhysicsSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object_ObjectPhysicsSettings::CopyFrom(const Object_ObjectPhysicsSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Object.ObjectPhysicsSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object_ObjectPhysicsSettings::IsInitialized() const {
  return true;
}

void Object_ObjectPhysicsSettings::Swap(Object_ObjectPhysicsSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object_ObjectPhysicsSettings::InternalSwap(Object_ObjectPhysicsSettings* other) {
  using std::swap;
  CastToBase(&phy_shape_)->InternalSwap(CastToBase(&other->phy_shape_));
  swap(phy_density_, other->phy_density_);
  swap(phy_shape_type_, other->phy_shape_type_);
  swap(phy_group_, other->phy_group_);
  swap(phy_restitution_, other->phy_restitution_);
  swap(phy_linear_damping_, other->phy_linear_damping_);
  swap(phy_angular_damping_, other->phy_angular_damping_);
  swap(phy_friction_, other->phy_friction_);
  swap(use_physics_, other->use_physics_);
  swap(phy_sensor_, other->phy_sensor_);
  swap(phy_awake_, other->phy_awake_);
  swap(phy_kinematic_, other->phy_kinematic_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Object_ObjectPhysicsSettings::GetMetadata() const {
  protobuf_Object_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Object_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Object::InitAsDefaultInstance() {
  ::buffers::resources::_Object_default_instance_._instance.get_mutable()->physics_settings_ = const_cast< ::buffers::resources::Object_ObjectPhysicsSettings*>(
      ::buffers::resources::Object_ObjectPhysicsSettings::internal_default_instance());
}
void Object::clear_events() {
  events_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object::kIdFieldNumber;
const int Object::kParentNameFieldNumber;
const int Object::kSpriteNameFieldNumber;
const int Object::kMaskNameFieldNumber;
const int Object::kDepthFieldNumber;
const int Object::kSolidFieldNumber;
const int Object::kVisibleFieldNumber;
const int Object::kPersistentFieldNumber;
const int Object::kEventsFieldNumber;
const int Object::kPhysicsSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object::Object()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Object_2eproto::scc_info_Object.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Object)
}
Object::Object(const Object& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parent_name()) {
    parent_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_name_);
  }
  sprite_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sprite_name()) {
    sprite_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sprite_name_);
  }
  mask_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mask_name()) {
    mask_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_name_);
  }
  if (from.has_physics_settings()) {
    physics_settings_ = new ::buffers::resources::Object_ObjectPhysicsSettings(*from.physics_settings_);
  } else {
    physics_settings_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&persistent_) -
    reinterpret_cast<char*>(&id_)) + sizeof(persistent_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Object)
}

void Object::SharedCtor() {
  parent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sprite_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&physics_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&persistent_) -
      reinterpret_cast<char*>(&physics_settings_)) + sizeof(persistent_));
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:buffers.resources.Object)
  SharedDtor();
}

void Object::SharedDtor() {
  parent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sprite_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mask_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete physics_settings_;
}

void Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Object::descriptor() {
  ::protobuf_Object_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Object_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object& Object::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Object_2eproto::scc_info_Object.base);
  return *internal_default_instance();
}


void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      parent_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      sprite_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      mask_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(physics_settings_ != NULL);
      physics_settings_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&visible_) -
        reinterpret_cast<char*>(&id_)) + sizeof(visible_));
  }
  persistent_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Object)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parent_name = 3 [(.buffers.gmx) = "parentName", (.buffers.yyp_id) = "parentObjectId"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parent_name().data(), static_cast<int>(this->parent_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Object.parent_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sprite_name = 4 [(.buffers.gmx) = "spriteName", (.buffers.yyp_id) = "spriteId"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sprite_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sprite_name().data(), static_cast<int>(this->sprite_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Object.sprite_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mask_name = 5 [(.buffers.gmx) = "maskName", (.buffers.yyp_id) = "maskSpriteId"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mask_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mask_name().data(), static_cast<int>(this->mask_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Object.mask_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 depth = 6 [(.buffers.yyp) = "YYP_DEPRECATED"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_depth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool solid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_solid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &solid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool visible = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool persistent = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_persistent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persistent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Event events = 10 [(.buffers.gmx) = "events/event", (.buffers.yyp) = "eventList"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .buffers.resources.Object.ObjectPhysicsSettings physics_settings = 11 [(.buffers.gmx) = "EGM_NESTED"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_physics_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Object)
  return false;
#undef DO_
}

void Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional string parent_name = 3 [(.buffers.gmx) = "parentName", (.buffers.yyp_id) = "parentObjectId"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_name().data(), static_cast<int>(this->parent_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Object.parent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->parent_name(), output);
  }

  // optional string sprite_name = 4 [(.buffers.gmx) = "spriteName", (.buffers.yyp_id) = "spriteId"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sprite_name().data(), static_cast<int>(this->sprite_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Object.sprite_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sprite_name(), output);
  }

  // optional string mask_name = 5 [(.buffers.gmx) = "maskName", (.buffers.yyp_id) = "maskSpriteId"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mask_name().data(), static_cast<int>(this->mask_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Object.mask_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mask_name(), output);
  }

  // optional int32 depth = 6 [(.buffers.yyp) = "YYP_DEPRECATED"];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->depth(), output);
  }

  // optional bool solid = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->solid(), output);
  }

  // optional bool visible = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->visible(), output);
  }

  // optional bool persistent = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->persistent(), output);
  }

  // repeated .buffers.resources.Event events = 10 [(.buffers.gmx) = "events/event", (.buffers.yyp) = "eventList"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->events(static_cast<int>(i)),
      output);
  }

  // optional .buffers.resources.Object.ObjectPhysicsSettings physics_settings = 11 [(.buffers.gmx) = "EGM_NESTED"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_physics_settings(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Object)
}

::google::protobuf::uint8* Object::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional string parent_name = 3 [(.buffers.gmx) = "parentName", (.buffers.yyp_id) = "parentObjectId"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_name().data(), static_cast<int>(this->parent_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Object.parent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parent_name(), target);
  }

  // optional string sprite_name = 4 [(.buffers.gmx) = "spriteName", (.buffers.yyp_id) = "spriteId"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sprite_name().data(), static_cast<int>(this->sprite_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Object.sprite_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sprite_name(), target);
  }

  // optional string mask_name = 5 [(.buffers.gmx) = "maskName", (.buffers.yyp_id) = "maskSpriteId"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mask_name().data(), static_cast<int>(this->mask_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Object.mask_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mask_name(), target);
  }

  // optional int32 depth = 6 [(.buffers.yyp) = "YYP_DEPRECATED"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->depth(), target);
  }

  // optional bool solid = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->solid(), target);
  }

  // optional bool visible = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->visible(), target);
  }

  // optional bool persistent = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->persistent(), target);
  }

  // repeated .buffers.resources.Event events = 10 [(.buffers.gmx) = "events/event", (.buffers.yyp) = "eventList"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->events(static_cast<int>(i)), deterministic, target);
  }

  // optional .buffers.resources.Object.ObjectPhysicsSettings physics_settings = 11 [(.buffers.gmx) = "EGM_NESTED"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_physics_settings(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Object)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Event events = 10 [(.buffers.gmx) = "events/event", (.buffers.yyp) = "eventList"];
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string parent_name = 3 [(.buffers.gmx) = "parentName", (.buffers.yyp_id) = "parentObjectId"];
    if (has_parent_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parent_name());
    }

    // optional string sprite_name = 4 [(.buffers.gmx) = "spriteName", (.buffers.yyp_id) = "spriteId"];
    if (has_sprite_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sprite_name());
    }

    // optional string mask_name = 5 [(.buffers.gmx) = "maskName", (.buffers.yyp_id) = "maskSpriteId"];
    if (has_mask_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mask_name());
    }

    // optional .buffers.resources.Object.ObjectPhysicsSettings physics_settings = 11 [(.buffers.gmx) = "EGM_NESTED"];
    if (has_physics_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *physics_settings_);
    }

    // optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 depth = 6 [(.buffers.yyp) = "YYP_DEPRECATED"];
    if (has_depth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->depth());
    }

    // optional bool solid = 7;
    if (has_solid()) {
      total_size += 1 + 1;
    }

    // optional bool visible = 8;
    if (has_visible()) {
      total_size += 1 + 1;
    }

  }
  // optional bool persistent = 9;
  if (has_persistent()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Object)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_parent_name();
      parent_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sprite_name();
      sprite_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sprite_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_mask_name();
      mask_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mask_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_physics_settings()->::buffers::resources::Object_ObjectPhysicsSettings::MergeFrom(from.physics_settings());
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      depth_ = from.depth_;
    }
    if (cached_has_bits & 0x00000040u) {
      solid_ = from.solid_;
    }
    if (cached_has_bits & 0x00000080u) {
      visible_ = from.visible_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_persistent(from.persistent());
  }
}

void Object::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::Swap(Object* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object::InternalSwap(Object* other) {
  using std::swap;
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  parent_name_.Swap(&other->parent_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sprite_name_.Swap(&other->sprite_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mask_name_.Swap(&other->mask_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(physics_settings_, other->physics_settings_);
  swap(id_, other->id_);
  swap(depth_, other->depth_);
  swap(solid_, other->solid_);
  swap(visible_, other->visible_);
  swap(persistent_, other->persistent_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Object::GetMetadata() const {
  protobuf_Object_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Object_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace buffers
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::buffers::resources::Object_PhysicsShapePoint* Arena::CreateMaybeMessage< ::buffers::resources::Object_PhysicsShapePoint >(Arena* arena) {
  return Arena::CreateInternal< ::buffers::resources::Object_PhysicsShapePoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::buffers::resources::Object_ObjectPhysicsSettings* Arena::CreateMaybeMessage< ::buffers::resources::Object_ObjectPhysicsSettings >(Arena* arena) {
  return Arena::CreateInternal< ::buffers::resources::Object_ObjectPhysicsSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::buffers::resources::Object* Arena::CreateMaybeMessage< ::buffers::resources::Object >(Arena* arena) {
  return Arena::CreateInternal< ::buffers::resources::Object >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
