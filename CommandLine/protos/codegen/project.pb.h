// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: project.proto

#ifndef PROTOBUF_INCLUDED_project_2eproto
#define PROTOBUF_INCLUDED_project_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "game.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_project_2eproto 

namespace protobuf_project_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_project_2eproto
namespace buffers {
class Project;
class ProjectDefaultTypeInternal;
extern ProjectDefaultTypeInternal _Project_default_instance_;
}  // namespace buffers
namespace google {
namespace protobuf {
template<> ::buffers::Project* Arena::CreateMaybeMessage<::buffers::Project>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace buffers {

// ===================================================================

class Project : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:buffers.Project) */ {
 public:
  Project();
  virtual ~Project();

  Project(const Project& from);

  inline Project& operator=(const Project& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Project(Project&& from) noexcept
    : Project() {
    *this = ::std::move(from);
  }

  inline Project& operator=(Project&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Project& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Project* internal_default_instance() {
    return reinterpret_cast<const Project*>(
               &_Project_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Project* other);
  friend void swap(Project& a, Project& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Project* New() const final {
    return CreateMaybeMessage<Project>(NULL);
  }

  Project* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Project>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Project& from);
  void MergeFrom(const Project& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Project* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .buffers.Game game = 1;
  bool has_game() const;
  void clear_game();
  static const int kGameFieldNumber = 1;
  private:
  const ::buffers::Game& _internal_game() const;
  public:
  const ::buffers::Game& game() const;
  ::buffers::Game* release_game();
  ::buffers::Game* mutable_game();
  void set_allocated_game(::buffers::Game* game);

  // @@protoc_insertion_point(class_scope:buffers.Project)
 private:
  void set_has_game();
  void clear_has_game();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::buffers::Game* game_;
  friend struct ::protobuf_project_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Project

// optional .buffers.Game game = 1;
inline bool Project::has_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Project::set_has_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Project::clear_has_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::buffers::Game& Project::_internal_game() const {
  return *game_;
}
inline const ::buffers::Game& Project::game() const {
  const ::buffers::Game* p = game_;
  // @@protoc_insertion_point(field_get:buffers.Project.game)
  return p != NULL ? *p : *reinterpret_cast<const ::buffers::Game*>(
      &::buffers::_Game_default_instance_);
}
inline ::buffers::Game* Project::release_game() {
  // @@protoc_insertion_point(field_release:buffers.Project.game)
  clear_has_game();
  ::buffers::Game* temp = game_;
  game_ = NULL;
  return temp;
}
inline ::buffers::Game* Project::mutable_game() {
  set_has_game();
  if (game_ == NULL) {
    auto* p = CreateMaybeMessage<::buffers::Game>(GetArenaNoVirtual());
    game_ = p;
  }
  // @@protoc_insertion_point(field_mutable:buffers.Project.game)
  return game_;
}
inline void Project::set_allocated_game(::buffers::Game* game) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(game_);
  }
  if (game) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      game = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, game, submessage_arena);
    }
    set_has_game();
  } else {
    clear_has_game();
  }
  game_ = game;
  // @@protoc_insertion_point(field_set_allocated:buffers.Project.game)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace buffers

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_project_2eproto
